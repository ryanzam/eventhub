@page "/events/create"
@using Eventhub.WebApp.Features.CreateEvent
@using Eventhub.WebApp.Shared.ViewModel
@using SixLabors.ImageSharp.Processing

@inject CreateEventService CreateEventService;
@inject NavigationManager NavigationManager;

<ErrorMsgComponent ErrorMessage="@errorMessage"/>

<h3>Create Event</h3>

<EventEditComponent EventViewModel="eventViewModel" OnSave="CreateEvent" ErrorMessage="@errorMessage">
    <ErrorMsgFragment>
        <ErrorMsgComponent ErrorMessage="@errorMessage"/>
    </ErrorMsgFragment>
</EventEditComponent>

@code {
    private EventViewModel eventViewModel = new EventViewModel();

    private string? errorMessage = string.Empty;

    private async Task CreateEvent()
    {
        errorMessage = CreateEventService.ValidateEvent(eventViewModel);

        if(!string.IsNullOrWhiteSpace(errorMessage))
        {
            return;
        };

        await CreateEventService.CreateEvent(eventViewModel);

        NavigationManager.NavigateTo("/");
    }

    private async Task HandleImgUpload(InputFileChangeEventArgs e)
    {
        IBrowserFile file = e.File;

        if(file is null)
        {
            errorMessage = "No image selected for the event.";
            return;
        }

        if(file.Size > 500 * 1024) // 5 KB limit
        {
            errorMessage = "Image size exceeds the maximum allowed size of 500 KB.";
            return;
        }

        eventViewModel.CoverImg = file;

        var fileName = Guid.NewGuid().ToString() + Path.GetExtension(eventViewModel.CoverImg.Name);
        var filePath = Path.Combine("wwwroot", "images", "events", fileName);

        using var stream = eventViewModel.CoverImg.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024); // 5 MB limit
        using var image = await SixLabors.ImageSharp.Image.LoadAsync(stream);
        image.Mutate(x => x.Resize(300, 169));

        using var outputStream = new FileStream(filePath, FileMode.Create);
        await image.SaveAsync(outputStream, new SixLabors.ImageSharp.Formats.Png.PngEncoder());

        eventViewModel.ImgUrl = $"/images/events/{fileName}";
    }
}
